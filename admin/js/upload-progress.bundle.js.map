{
  "version": 3,
  "sources": ["../../src/js/upload-progress.js"],
  "sourcesContent": ["/**\n * OptiPress Upload Progress Tracking\n *\n * @package OptiPress\n */\n\n(function ($) {\n\t'use strict';\n\n\t// Track attachments being processed\n\tvar processingAttachments = {};\n\tvar pollInterval = null;\n\tvar sessionSavings = 0;\n\tvar sessionCount = 0;\n\tvar DEBUG = !!window.OPTIPRESS_DEBUG;\n\n\tfunction log() {\n\t\tif (DEBUG && window.console && console.log) {\n\t\t\tconsole.log.apply(console, arguments);\n\t\t}\n\t}\n\n\tfunction deriveMimeFromFilename(name) {\n\t\tif (!name) return '';\n\t\tvar m = name.toLowerCase().match(/\\.([a-z0-9]+)$/);\n\t\tif (!m) return '';\n\t\tswitch (m[1]) {\n\t\t\tcase 'jpg':\n\t\t\tcase 'jpeg':\n\t\t\t\treturn 'image/jpeg';\n\t\t\tcase 'png':\n\t\t\t\treturn 'image/png';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\tfunction getAttachmentMime(att) {\n\t\tif (!att) return '';\n\t\tif (att.mime) return att.mime;\n\t\tif (att.type && att.subtype) return (att.type + '/' + att.subtype).toLowerCase();\n\t\treturn deriveMimeFromFilename(att.filename || att.name || '');\n\t}\n\n\tfunction isConvertibleMime(mime) {\n\t\tif (!mime) return false;\n\t\tmime = mime.toLowerCase();\n\t\treturn mime === 'image/jpeg' || mime === 'image/png';\n\t}\n\n\t/**\n\t * Initialize upload progress tracking\n\t */\n\t$(document).ready(function () {\n\t\tif (typeof wp === 'undefined' || typeof wp.Uploader === 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\t// Add savings counter and status panel\n\t\taddSavingsCounter();\n\t\tensureUploadPanel();\n\n\t\t// Extend the wp.Uploader to show conversion status\n\t\tvar originalSuccess = wp.Uploader.prototype.success;\n\t\twp.Uploader.prototype.success = function (attachment) {\n\t\t\toriginalSuccess.apply(this, arguments);\n\t\t\tif (DEBUG) log('OptiPress uploader success:', attachment);\n\t\t\t// Track this attachment for status polling\n\t\t\tif (attachment && attachment.id) {\n\t\t\t\ttrackAttachment(attachment.id, attachment);\n\t\t\t}\n\t\t};\n\n\t\t// Also hook into Backbone uploader for media modal\n\t\tif (wp.Uploader.queue) {\n\t\t\twp.Uploader.queue.on('add', function (attachment) {\n\t\t\t\tif (attachment && attachment.id) {\n\t\t\t\t\ttrackAttachment(attachment.id, attachment);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t/**\n\t * Track attachment for conversion status polling\n\t */\n\tfunction trackAttachment(attachmentId, attachment) {\n\t\tvar mimeType = getAttachmentMime(attachment);\n\t\tif (DEBUG) log('OptiPress trackAttachment:', attachmentId, mimeType, attachment);\n\t\tif (!isConvertibleMime(mimeType)) return;\n\n\t\t// Add to processing queue\n\t\tprocessingAttachments[attachmentId] = {\n\t\t\tid: attachmentId,\n\t\t\tfilename: attachment.filename || attachment.name || 'image',\n\t\t\tattempts: 0,\n\t\t\tmaxAttempts: 30, // 30 seconds max polling\n\t\t\tfastPollUntil: Date.now() + 5000, // Fast poll for first 5 seconds\n\t\t};\n\n\t\t// Show initial status immediately\n\t\tshowConversionStatus(attachmentId, 'processing');\n\n\t\t// Start polling immediately (don't wait 1 second)\n\t\tpollConversionStatus(attachmentId);\n\n\t\t// Start polling interval if not already running\n\t\tif (!pollInterval) {\n\t\t\tstartPolling();\n\t\t}\n\t}\n\n\t/**\n\t * Start polling for conversion status\n\t */\n\tfunction startPolling() {\n\t\t// Use faster polling for first few seconds to catch quick conversions\n\t\tvar pollCount = 0;\n\n\t\tpollInterval = setInterval(function () {\n\t\t\tpollCount++;\n\t\t\tcheckConversionStatuses();\n\n\t\t\t// Switch to slower polling after 10 fast polls (2 seconds)\n\t\t\tif (pollCount === 10 && pollInterval) {\n\t\t\t\tclearInterval(pollInterval);\n\t\t\t\tpollInterval = setInterval(checkConversionStatuses, 1000);\n\t\t\t}\n\t\t}, 200); // Poll every 200ms initially\n\t}\n\n\t/**\n\t * Stop polling\n\t */\n\tfunction stopPolling() {\n\t\tif (pollInterval) {\n\t\t\tclearInterval(pollInterval);\n\t\t\tpollInterval = null;\n\t\t}\n\t}\n\n\t/**\n\t * Check conversion status for all processing attachments\n\t */\n\tfunction checkConversionStatuses() {\n\t\tvar attachmentIds = Object.keys(processingAttachments);\n\n\t\tif (attachmentIds.length === 0) {\n\t\t\tstopPolling();\n\t\t\treturn;\n\t\t}\n\n\t\t// Check each attachment\n\t\tattachmentIds.forEach(function (attachmentId) {\n\t\t\tvar attachment = processingAttachments[attachmentId];\n\t\t\tattachment.attempts++;\n\n\t\t\t// Check if max attempts reached\n\t\t\tif (attachment.attempts >= attachment.maxAttempts) {\n\t\t\t\tshowConversionStatus(attachmentId, 'timeout');\n\t\t\t\tdelete processingAttachments[attachmentId];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Poll status\n\t\t\tpollConversionStatus(attachmentId);\n\t\t});\n\t}\n\n\t/**\n\t * Poll conversion status for a single attachment\n\t */\n\tfunction pollConversionStatus(attachmentId) {\n\t\t$.ajax({\n\t\t\turl: ajaxurl,\n\t\t\ttype: 'POST',\n\t\t\tdata: {\n\t\t\t\taction: 'optipress_check_conversion_status',\n\t\t\t\tnonce: optipressUpload.nonce,\n\t\t\t\tattachment_id: attachmentId,\n\t\t\t},\n\t\t\tsuccess: function (response) {\n\t\t\t\tif (response.success && response.data) {\n\t\t\t\t\tif (response.data.status === 'completed') {\n\t\t\t\t\t\t// Conversion complete\n\t\t\t\t\t\tshowConversionStatus(attachmentId, 'completed', response.data);\n\t\t\t\t\t\tdelete processingAttachments[attachmentId];\n\n\t\t\t\t\t\t// Update session counter\n\t\t\t\t\t\tupdateSessionStats(response.data);\n\t\t\t\t\t} else if (response.data.status === 'processing') {\n\t\t\t\t\t\t// Still processing - status already showing\n\t\t\t\t\t\tshowConversionStatus(attachmentId, 'processing', response.data);\n\t\t\t\t\t} else if (response.data.status === 'not_applicable') {\n\t\t\t\t\t\t// Not a convertible image or conversion disabled\n\t\t\t\t\t\tdelete processingAttachments[attachmentId];\n\t\t\t\t\t\t// Don't show any status for non-convertible images\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function () {\n\t\t\t\t// Silently handle errors, will retry on next poll\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Show conversion status message\n\t */\n\tfunction showConversionStatus(attachmentId, status, data) {\n\t\tensureUploadPanel();\n\t\tupdateUploadPanelItem(attachmentId, status, data);\n\t}\n\n\t/**\n\t * Update session statistics\n\t */\n\tfunction updateSessionStats(data) {\n\t\tif (data.bytes_saved && data.bytes_saved > 0) {\n\t\t\tsessionSavings += data.bytes_saved;\n\t\t\tsessionCount++;\n\t\t\tupdateSavingsCounter();\n\t\t}\n\t}\n\n\t/**\n\t * Add savings counter to the page\n\t */\n\tfunction addSavingsCounter() {\n\t\t// Check if counter already exists\n\t\tif ($('#optipress-savings-counter').length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Add counter to the page\n\t\tvar $counter = $(\n\t\t\t'<div id=\"optipress-savings-counter\" class=\"optipress-counter-hidden\">' +\n\t\t\t\t'<div class=\"optipress-counter-label\">OptiPress Session</div>' +\n\t\t\t\t'<div class=\"optipress-counter-value\">' +\n\t\t\t\t'<span id=\"optipress-session-savings\">0 KB</span> saved' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div class=\"optipress-counter-count\">' +\n\t\t\t\t'<span id=\"optipress-session-count\">0</span> images optimized' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t);\n\n\t\t$('body').append($counter);\n\t}\n\n\t/**\n\t * Upload status panel\n\t */\n\tfunction ensureUploadPanel() {\n\t\tif ($('#optipress-upload-panel').length) return;\n\t\tvar $panel = $(\n\t\t\t'<div id=\"optipress-upload-panel\" class=\"hidden\">' +\n\t\t\t\t'<div class=\"optipress-upload-header\">' +\n\t\t\t\t'<span>OptiPress Uploads</span>' +\n\t\t\t\t'<button type=\"button\" class=\"optipress-upload-remove\" title=\"Hide\" aria-label=\"Hide\">\u00D7</button>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<ul class=\"optipress-upload-list\" id=\"optipress-upload-list\"></ul>' +\n\t\t\t\t'</div>'\n\t\t);\n\t\t$panel.on('click', '.optipress-upload-remove', function () {\n\t\t\t$('#optipress-upload-panel').toggleClass('hidden');\n\t\t});\n\t\t$('body').append($panel);\n\t}\n\n\tfunction updateUploadPanelVisibility() {\n\t\tvar $list = $('#optipress-upload-list');\n\t\tvar hasItems = $list.children().length > 0;\n\t\t$('#optipress-upload-panel').toggleClass('hidden', !hasItems);\n\t}\n\n\tfunction updateUploadPanelItem(attachmentId, status, data) {\n\t\tvar $list = $('#optipress-upload-list');\n\t\tvar id = String(attachmentId);\n\t\tvar $item = $list.find('[data-id=\"' + id + '\"]');\n\t\tvar filename =\n\t\t\t(data && data.filename) ||\n\t\t\t(processingAttachments[id] && processingAttachments[id].filename) ||\n\t\t\t'#' + id;\n\t\tvar message;\n\t\tswitch (status) {\n\t\t\tcase 'processing':\n\t\t\t\tmessage = (data && data.message) || 'Converting image...';\n\t\t\t\tbreak;\n\t\t\tcase 'completed':\n\t\t\t\tmessage = (data && data.message) || 'Conversion complete';\n\t\t\t\tbreak;\n\t\t\tcase 'timeout':\n\t\t\t\tmessage = 'Conversion taking longer than expected...';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!$item.length) {\n\t\t\t$item = $(\n\t\t\t\t'<li class=\"optipress-upload-item processing\" data-id=\"' +\n\t\t\t\t\tid +\n\t\t\t\t\t'\">' +\n\t\t\t\t\t'<span class=\"status-icon\"><span class=\"spinner is-active\"></span></span>' +\n\t\t\t\t\t'<div class=\"optipress-upload-filename\" title=\"' +\n\t\t\t\t\tfilename +\n\t\t\t\t\t'\">' +\n\t\t\t\t\tfilename +\n\t\t\t\t\t'</div>' +\n\t\t\t\t\t'<div class=\"optipress-upload-message\">' +\n\t\t\t\t\tmessage +\n\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</li>'\n\t\t\t);\n\t\t\t$list.prepend($item);\n\t\t} else {\n\t\t\t$item.find('.optipress-upload-message').text(message);\n\t\t}\n\n\t\t$item.removeClass('processing completed timeout');\n\t\tswitch (status) {\n\t\t\tcase 'processing':\n\t\t\t\t$item.addClass('processing');\n\t\t\t\t$item.find('.status-icon').html('<span class=\"spinner is-active\"></span>');\n\t\t\t\tbreak;\n\t\t\tcase 'completed':\n\t\t\t\t$item.addClass('completed');\n\t\t\t\t$item\n\t\t\t\t\t.find('.status-icon')\n\t\t\t\t\t.html('<span class=\"dashicons dashicons-yes-alt\"></span>');\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t$item.fadeOut(300, function () {\n\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\tupdateUploadPanelVisibility();\n\t\t\t\t\t});\n\t\t\t\t}, 8000);\n\t\t\t\tbreak;\n\t\t\tcase 'timeout':\n\t\t\t\t$item.addClass('timeout');\n\t\t\t\t$item\n\t\t\t\t\t.find('.status-icon')\n\t\t\t\t\t.html('<span class=\"dashicons dashicons-warning\"></span>');\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t$item.fadeOut(300, function () {\n\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\tupdateUploadPanelVisibility();\n\t\t\t\t\t});\n\t\t\t\t}, 5000);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tupdateUploadPanelVisibility();\n\t}\n\n\t/**\n\t * Update savings counter display\n\t */\n\tfunction updateSavingsCounter() {\n\t\tvar $counter = $('#optipress-savings-counter');\n\n\t\tif (!$counter.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Format savings\n\t\tvar formatted;\n\t\tvar savingsKB = sessionSavings / 1024;\n\n\t\tif (savingsKB >= 1024) {\n\t\t\tformatted = (savingsKB / 1024).toFixed(1) + ' MB';\n\t\t} else {\n\t\t\tformatted = savingsKB.toFixed(1) + ' KB';\n\t\t}\n\n\t\t// Update text\n\t\t$('#optipress-session-savings').text(formatted);\n\t\t$('#optipress-session-count').text(sessionCount);\n\n\t\t// Show counter\n\t\tif (sessionCount > 0) {\n\t\t\t$counter.removeClass('optipress-counter-hidden');\n\t\t}\n\t}\n})(jQuery);\n"],
  "mappings": "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",
  "names": []
}
