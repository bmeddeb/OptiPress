{
  "version": 3,
  "sources": ["../../src/js/upload-progress.js"],
  "sourcesContent": ["/**\n * OptiPress Upload Progress Tracking\n *\n * @package OptiPress\n */\n\n(function ($) {\n\t'use strict';\n\n\t// Track attachments being processed\n\tvar processingAttachments = {};\n\tvar pollInterval = null;\n\tvar sessionSavings = 0;\n\tvar sessionCount = 0;\n\tvar DEBUG = !!window.OPTIPRESS_DEBUG;\n\n\tfunction log() {\n\t\tif (DEBUG && window.console && console.log) {\n\t\t\tconsole.log.apply(console, arguments);\n\t\t}\n\t}\n\n\tfunction deriveMimeFromFilename(name) {\n\t\tif (!name) return '';\n\t\tvar m = name.toLowerCase().match(/\\.([a-z0-9]+)$/);\n\t\tif (!m) return '';\n\t\tswitch (m[1]) {\n\t\t\tcase 'jpg':\n\t\t\tcase 'jpeg':\n\t\t\t\treturn 'image/jpeg';\n\t\t\tcase 'png':\n\t\t\t\treturn 'image/png';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\tfunction getAttachmentMime(att) {\n\t\tif (!att) return '';\n\t\tif (att.mime) return att.mime;\n\t\tif (att.type && att.subtype) return (att.type + '/' + att.subtype).toLowerCase();\n\t\treturn deriveMimeFromFilename(att.filename || att.name || '');\n\t}\n\n\tfunction isConvertibleMime(mime) {\n\t\tif (!mime) return false;\n\t\tmime = mime.toLowerCase();\n\t\treturn mime === 'image/jpeg' || mime === 'image/png';\n\t}\n\n\t/**\n\t * Initialize upload progress tracking\n\t */\n\t$(document).ready(function () {\n\t\tif (typeof wp === 'undefined' || typeof wp.Uploader === 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\t// Add savings counter and status panel\n\t\taddSavingsCounter();\n\t\tensureUploadPanel();\n\n\t\t// Extend the wp.Uploader to show conversion status\n\t\tvar originalSuccess = wp.Uploader.prototype.success;\n\t\twp.Uploader.prototype.success = function (attachment) {\n\t\t\toriginalSuccess.apply(this, arguments);\n\t\t\tif (DEBUG) log('OptiPress uploader success:', attachment);\n\t\t\t// Track this attachment for status polling\n\t\t\tif (attachment && attachment.id) {\n\t\t\t\ttrackAttachment(attachment.id, attachment);\n\t\t\t}\n\t\t};\n\n\t\t// Also hook into Backbone uploader for media modal\n\t\tif (wp.Uploader.queue) {\n\t\t\twp.Uploader.queue.on('add', function (attachment) {\n\t\t\t\tif (attachment && attachment.id) {\n\t\t\t\t\ttrackAttachment(attachment.id, attachment);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t/**\n\t * Track attachment for conversion status polling\n\t */\n\tfunction trackAttachment(attachmentId, attachment) {\n\t\tvar mimeType = getAttachmentMime(attachment);\n\t\tif (DEBUG) log('OptiPress trackAttachment:', attachmentId, mimeType, attachment);\n\t\tif (!isConvertibleMime(mimeType)) return;\n\n\t\t// Add to processing queue\n\t\tprocessingAttachments[attachmentId] = {\n\t\t\tid: attachmentId,\n\t\t\tfilename: attachment.filename || attachment.name || 'image',\n\t\t\tattempts: 0,\n\t\t\tmaxAttempts: 30, // 30 seconds max polling\n\t\t\tfastPollUntil: Date.now() + 5000, // Fast poll for first 5 seconds\n\t\t};\n\n\t\t// Show initial status immediately\n\t\tshowConversionStatus(attachmentId, 'processing');\n\n\t\t// Start polling immediately (don't wait 1 second)\n\t\tpollConversionStatus(attachmentId);\n\n\t\t// Start polling interval if not already running\n\t\tif (!pollInterval) {\n\t\t\tstartPolling();\n\t\t}\n\t}\n\n\t/**\n\t * Start polling for conversion status\n\t */\n\tfunction startPolling() {\n\t\t// Use faster polling for first few seconds to catch quick conversions\n\t\tvar pollCount = 0;\n\n\t\tpollInterval = setInterval(function () {\n\t\t\tpollCount++;\n\t\t\tcheckConversionStatuses();\n\n\t\t\t// Switch to slower polling after 10 fast polls (2 seconds)\n\t\t\tif (pollCount === 10 && pollInterval) {\n\t\t\t\tclearInterval(pollInterval);\n\t\t\t\tpollInterval = setInterval(checkConversionStatuses, 1000);\n\t\t\t}\n\t\t}, 200); // Poll every 200ms initially\n\t}\n\n\t/**\n\t * Stop polling\n\t */\n\tfunction stopPolling() {\n\t\tif (pollInterval) {\n\t\t\tclearInterval(pollInterval);\n\t\t\tpollInterval = null;\n\t\t}\n\t}\n\n\t/**\n\t * Check conversion status for all processing attachments\n\t */\n\tfunction checkConversionStatuses() {\n\t\tvar attachmentIds = Object.keys(processingAttachments);\n\n\t\tif (attachmentIds.length === 0) {\n\t\t\tstopPolling();\n\t\t\treturn;\n\t\t}\n\n\t\t// Check each attachment\n\t\tattachmentIds.forEach(function (attachmentId) {\n\t\t\tvar attachment = processingAttachments[attachmentId];\n\t\t\tattachment.attempts++;\n\n\t\t\t// Check if max attempts reached\n\t\t\tif (attachment.attempts >= attachment.maxAttempts) {\n\t\t\t\tshowConversionStatus(attachmentId, 'timeout');\n\t\t\t\tdelete processingAttachments[attachmentId];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Poll status\n\t\t\tpollConversionStatus(attachmentId);\n\t\t});\n\t}\n\n\t/**\n\t * Poll conversion status for a single attachment\n\t */\n\tfunction pollConversionStatus(attachmentId) {\n\t\t$.ajax({\n\t\t\turl: ajaxurl,\n\t\t\ttype: 'POST',\n\t\t\tdata: {\n\t\t\t\taction: 'optipress_check_conversion_status',\n\t\t\t\tnonce: optipressUpload.nonce,\n\t\t\t\tattachment_id: attachmentId,\n\t\t\t},\n\t\t\tsuccess: function (response) {\n\t\t\t\tif (response.success && response.data) {\n\t\t\t\t\tif (response.data.status === 'completed') {\n\t\t\t\t\t\t// Conversion complete\n\t\t\t\t\t\tshowConversionStatus(attachmentId, 'completed', response.data);\n\t\t\t\t\t\tdelete processingAttachments[attachmentId];\n\n\t\t\t\t\t\t// Update session counter\n\t\t\t\t\t\tupdateSessionStats(response.data);\n\t\t\t\t\t} else if (response.data.status === 'processing') {\n\t\t\t\t\t\t// Still processing - status already showing\n\t\t\t\t\t\tshowConversionStatus(attachmentId, 'processing', response.data);\n\t\t\t\t\t} else if (response.data.status === 'not_applicable') {\n\t\t\t\t\t\t// Not a convertible image or conversion disabled\n\t\t\t\t\t\tdelete processingAttachments[attachmentId];\n\t\t\t\t\t\t// Don't show any status for non-convertible images\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function () {\n\t\t\t\t// Silently handle errors, will retry on next poll\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Show conversion status message\n\t */\n\tfunction showConversionStatus(attachmentId, status, data) {\n\t\tensureUploadPanel();\n\t\tupdateUploadPanelItem(attachmentId, status, data);\n\t}\n\n\t/**\n\t * Update session statistics\n\t */\n\tfunction updateSessionStats(data) {\n\t\tif (data.bytes_saved && data.bytes_saved > 0) {\n\t\t\tsessionSavings += data.bytes_saved;\n\t\t\tsessionCount++;\n\t\t\tupdateSavingsCounter();\n\t\t}\n\t}\n\n\t/**\n\t * Add savings counter to the page\n\t */\n\tfunction addSavingsCounter() {\n\t\t// Check if counter already exists\n\t\tif ($('#optipress-savings-counter').length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Add counter to the page\n\t\tvar $counter = $(\n\t\t\t'<div id=\"optipress-savings-counter\" class=\"optipress-counter-hidden\">' +\n\t\t\t\t'<div class=\"optipress-counter-label\">OptiPress Session</div>' +\n\t\t\t\t'<div class=\"optipress-counter-value\">' +\n\t\t\t\t'<span id=\"optipress-session-savings\">0 KB</span> saved' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div class=\"optipress-counter-count\">' +\n\t\t\t\t'<span id=\"optipress-session-count\">0</span> images optimized' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t);\n\n\t\t$('body').append($counter);\n\t}\n\n\t/**\n\t * Upload status panel\n\t */\n\tfunction ensureUploadPanel() {\n\t\tif ($('#optipress-upload-panel').length) return;\n\t\tvar $panel = $(\n\t\t\t'<div id=\"optipress-upload-panel\" class=\"hidden\">' +\n\t\t\t\t'<div class=\"optipress-upload-header\">' +\n\t\t\t\t'<span>OptiPress Uploads</span>' +\n\t\t\t\t'<button type=\"button\" class=\"optipress-upload-remove\" title=\"Hide\" aria-label=\"Hide\">\u00D7</button>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<ul class=\"optipress-upload-list\" id=\"optipress-upload-list\"></ul>' +\n\t\t\t\t'</div>'\n\t\t);\n\t\t$panel.on('click', '.optipress-upload-remove', function () {\n\t\t\t$('#optipress-upload-panel').toggleClass('hidden');\n\t\t});\n\t\t$('body').append($panel);\n\t}\n\n\tfunction updateUploadPanelVisibility() {\n\t\tvar $list = $('#optipress-upload-list');\n\t\tvar hasItems = $list.children().length > 0;\n\t\t$('#optipress-upload-panel').toggleClass('hidden', !hasItems);\n\t}\n\n\tfunction updateUploadPanelItem(attachmentId, status, data) {\n\t\tvar $list = $('#optipress-upload-list');\n\t\tvar id = String(attachmentId);\n\t\tvar $item = $list.find('[data-id=\"' + id + '\"]');\n\t\tvar filename =\n\t\t\t(data && data.filename) ||\n\t\t\t(processingAttachments[id] && processingAttachments[id].filename) ||\n\t\t\t'#' + id;\n\t\tvar message;\n\t\tswitch (status) {\n\t\t\tcase 'processing':\n\t\t\t\tmessage = (data && data.message) || 'Converting image...';\n\t\t\t\tbreak;\n\t\t\tcase 'completed':\n\t\t\t\tmessage = (data && data.message) || 'Conversion complete';\n\t\t\t\tbreak;\n\t\t\tcase 'timeout':\n\t\t\t\tmessage = 'Conversion taking longer than expected...';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!$item.length) {\n\t\t\t$item = $(\n\t\t\t\t'<li class=\"optipress-upload-item processing\" data-id=\"' +\n\t\t\t\t\tid +\n\t\t\t\t\t'\">' +\n\t\t\t\t\t'<span class=\"status-icon\"><span class=\"spinner is-active\"></span></span>' +\n\t\t\t\t\t'<div class=\"optipress-upload-filename\" title=\"' +\n\t\t\t\t\tfilename +\n\t\t\t\t\t'\">' +\n\t\t\t\t\tfilename +\n\t\t\t\t\t'</div>' +\n\t\t\t\t\t'<div class=\"optipress-upload-message\">' +\n\t\t\t\t\tmessage +\n\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</li>'\n\t\t\t);\n\t\t\t$list.prepend($item);\n\t\t} else {\n\t\t\t$item.find('.optipress-upload-message').text(message);\n\t\t}\n\n\t\t$item.removeClass('processing completed timeout');\n\t\tswitch (status) {\n\t\t\tcase 'processing':\n\t\t\t\t$item.addClass('processing');\n\t\t\t\t$item.find('.status-icon').html('<span class=\"spinner is-active\"></span>');\n\t\t\t\tbreak;\n\t\t\tcase 'completed':\n\t\t\t\t$item.addClass('completed');\n\t\t\t\t$item\n\t\t\t\t\t.find('.status-icon')\n\t\t\t\t\t.html('<span class=\"dashicons dashicons-yes-alt\"></span>');\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t$item.fadeOut(300, function () {\n\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\tupdateUploadPanelVisibility();\n\t\t\t\t\t});\n\t\t\t\t}, 8000);\n\t\t\t\tbreak;\n\t\t\tcase 'timeout':\n\t\t\t\t$item.addClass('timeout');\n\t\t\t\t$item\n\t\t\t\t\t.find('.status-icon')\n\t\t\t\t\t.html('<span class=\"dashicons dashicons-warning\"></span>');\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t$item.fadeOut(300, function () {\n\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\tupdateUploadPanelVisibility();\n\t\t\t\t\t});\n\t\t\t\t}, 5000);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tupdateUploadPanelVisibility();\n\t}\n\n\t/**\n\t * Update savings counter display\n\t */\n\tfunction updateSavingsCounter() {\n\t\tvar $counter = $('#optipress-savings-counter');\n\n\t\tif (!$counter.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Format savings\n\t\tvar formatted;\n\t\tvar savingsKB = sessionSavings / 1024;\n\n\t\tif (savingsKB >= 1024) {\n\t\t\tformatted = (savingsKB / 1024).toFixed(1) + ' MB';\n\t\t} else {\n\t\t\tformatted = savingsKB.toFixed(1) + ' KB';\n\t\t}\n\n\t\t// Update text\n\t\t$('#optipress-session-savings').text(formatted);\n\t\t$('#optipress-session-count').text(sessionCount);\n\n\t\t// Show counter\n\t\tif (sessionCount > 0) {\n\t\t\t$counter.removeClass('optipress-counter-hidden');\n\t\t}\n\t}\n})(jQuery);\n"],
  "mappings": "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",
  "names": ["$", "processingAttachments", "pollInterval", "sessionSavings", "sessionCount", "DEBUG", "log", "deriveMimeFromFilename", "name", "m", "getAttachmentMime", "att", "isConvertibleMime", "mime", "addSavingsCounter", "ensureUploadPanel", "originalSuccess", "attachment", "trackAttachment", "attachmentId", "mimeType", "showConversionStatus", "pollConversionStatus", "startPolling", "pollCount", "checkConversionStatuses", "stopPolling", "attachmentIds", "response", "updateSessionStats", "status", "data", "updateUploadPanelItem", "updateSavingsCounter", "$counter", "$panel", "updateUploadPanelVisibility", "$list", "hasItems", "id", "$item", "filename", "message", "formatted", "savingsKB"]
}
