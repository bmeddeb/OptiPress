{
  "version": 3,
  "sources": ["../../src/js/attachment-edit.js"],
  "sourcesContent": ["/**\n * OptiPress Attachment Edit Page\n *\n * Handles conversion controls on individual attachment edit page.\n *\n * @package OptiPress\n */\n\n(function ($) {\n\t'use strict';\n\n\tvar processing = false;\n\n\t$(document).ready(function () {\n\t\t// Convert Image button\n\t\t$('#optipress-meta-box-content').on('click', '.optipress-convert-image', function (e) {\n\t\t\te.preventDefault();\n\n\t\t\tif (processing) return;\n\n\t\t\tvar $button = $(this);\n\t\t\tvar attachmentId = $('#optipress-meta-box-content').data('attachment-id');\n\t\t\tvar format = $('input[name=\"optipress_format\"]:checked').val();\n\n\t\t\tif (!format) {\n\t\t\t\talert(optipressAttachment.i18n.error + ': No format selected.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconvertImage(attachmentId, format);\n\t\t});\n\n\t\t// Revert Image button\n\t\t$('#optipress-meta-box-content').on('click', '.optipress-revert-image', function (e) {\n\t\t\te.preventDefault();\n\n\t\t\tif (processing) return;\n\n\t\t\tif (!confirm(optipressAttachment.i18n.confirmRevert)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar attachmentId = $('#optipress-meta-box-content').data('attachment-id');\n\t\t\trevertImage(attachmentId);\n\t\t});\n\n\t\t// Switch Format button\n\t\t$('#optipress-meta-box-content').on('click', '.optipress-switch-format', function (e) {\n\t\t\te.preventDefault();\n\n\t\t\tif (processing) return;\n\n\t\t\tvar $button = $(this);\n\t\t\tvar attachmentId = $('#optipress-meta-box-content').data('attachment-id');\n\t\t\tvar format = $button.data('format');\n\n\t\t\tswitchFormat(attachmentId, format);\n\t\t});\n\t});\n\n\t/**\n\t * Convert image to specified format\n\t */\n\tfunction convertImage(attachmentId, format) {\n\t\tprocessing = true;\n\t\tshowLoading(optipressAttachment.i18n.converting);\n\n\t\t$.ajax({\n\t\t\turl: optipressAttachment.ajaxUrl,\n\t\t\ttype: 'POST',\n\t\t\tdata: {\n\t\t\t\taction: 'optipress_convert_single_image',\n\t\t\t\tnonce: optipressAttachment.nonce,\n\t\t\t\tattachment_id: attachmentId,\n\t\t\t\tformat: format,\n\t\t\t},\n\t\t\tsuccess: function (response) {\n\t\t\t\tprocessing = false;\n\n\t\t\t\tif (response.success) {\n\t\t\t\t\t// Show success message using WordPress notices\n\t\t\t\t\tshowNotice(response.data.message, 'success');\n\n\t\t\t\t\t// Update meta box content\n\t\t\t\t\tif (response.data.html) {\n\t\t\t\t\t\t$('#optipress-meta-box-content').html(response.data.html);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reload attachment data in media modal if open\n\t\t\t\t\treloadAttachmentData(attachmentId);\n\n\t\t\t\t\t// Reload page after 2 seconds to refresh all URLs (including download link)\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t}, 2000);\n\t\t\t\t} else {\n\t\t\t\t\tvar errorMsg =\n\t\t\t\t\t\tresponse.data && response.data.message\n\t\t\t\t\t\t\t? response.data.message\n\t\t\t\t\t\t\t: optipressAttachment.i18n.unknownError;\n\n\t\t\t\t\tshowNotice(optipressAttachment.i18n.conversionError + ' ' + errorMsg, 'error');\n\n\t\t\t\t\thideLoading();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function (xhr, status, error) {\n\t\t\t\tprocessing = false;\n\t\t\t\tshowNotice(optipressAttachment.i18n.error + ': ' + error, 'error');\n\t\t\t\thideLoading();\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Revert image to original\n\t */\n\tfunction revertImage(attachmentId) {\n\t\tprocessing = true;\n\t\tshowLoading(optipressAttachment.i18n.reverting);\n\n\t\t$.ajax({\n\t\t\turl: optipressAttachment.ajaxUrl,\n\t\t\ttype: 'POST',\n\t\t\tdata: {\n\t\t\t\taction: 'optipress_revert_single_image',\n\t\t\t\tnonce: optipressAttachment.nonce,\n\t\t\t\tattachment_id: attachmentId,\n\t\t\t},\n\t\t\tsuccess: function (response) {\n\t\t\t\tprocessing = false;\n\n\t\t\t\tif (response.success) {\n\t\t\t\t\t// Show success message\n\t\t\t\t\tshowNotice(response.data.message, 'success');\n\n\t\t\t\t\t// Update meta box content\n\t\t\t\t\tif (response.data.html) {\n\t\t\t\t\t\t$('#optipress-meta-box-content').html(response.data.html);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reload attachment data\n\t\t\t\t\treloadAttachmentData(attachmentId);\n\n\t\t\t\t\t// Reload page after 2 seconds to refresh all URLs\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t}, 2000);\n\t\t\t\t} else {\n\t\t\t\t\tvar errorMsg =\n\t\t\t\t\t\tresponse.data && response.data.message\n\t\t\t\t\t\t\t? response.data.message\n\t\t\t\t\t\t\t: optipressAttachment.i18n.unknownError;\n\n\t\t\t\t\tshowNotice(errorMsg, 'error');\n\t\t\t\t\thideLoading();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function (xhr, status, error) {\n\t\t\t\tprocessing = false;\n\t\t\t\tshowNotice(optipressAttachment.i18n.error + ': ' + error, 'error');\n\t\t\t\thideLoading();\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Switch image to different format\n\t */\n\tfunction switchFormat(attachmentId, format) {\n\t\tprocessing = true;\n\t\tshowLoading(optipressAttachment.i18n.switching);\n\n\t\t$.ajax({\n\t\t\turl: optipressAttachment.ajaxUrl,\n\t\t\ttype: 'POST',\n\t\t\tdata: {\n\t\t\t\taction: 'optipress_switch_format',\n\t\t\t\tnonce: optipressAttachment.nonce,\n\t\t\t\tattachment_id: attachmentId,\n\t\t\t\tformat: format,\n\t\t\t},\n\t\t\tsuccess: function (response) {\n\t\t\t\tprocessing = false;\n\n\t\t\t\tif (response.success) {\n\t\t\t\t\t// Show success message\n\t\t\t\t\tshowNotice(response.data.message, 'success');\n\n\t\t\t\t\t// Update meta box content\n\t\t\t\t\tif (response.data.html) {\n\t\t\t\t\t\t$('#optipress-meta-box-content').html(response.data.html);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reload attachment data\n\t\t\t\t\treloadAttachmentData(attachmentId);\n\n\t\t\t\t\t// Reload page after 2 seconds to refresh all URLs\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t}, 2000);\n\t\t\t\t} else {\n\t\t\t\t\tvar errorMsg =\n\t\t\t\t\t\tresponse.data && response.data.message\n\t\t\t\t\t\t\t? response.data.message\n\t\t\t\t\t\t\t: optipressAttachment.i18n.unknownError;\n\n\t\t\t\t\tshowNotice(optipressAttachment.i18n.conversionError + ' ' + errorMsg, 'error');\n\n\t\t\t\t\thideLoading();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function (xhr, status, error) {\n\t\t\t\tprocessing = false;\n\t\t\t\tshowNotice(optipressAttachment.i18n.error + ': ' + error, 'error');\n\t\t\t\thideLoading();\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Show loading state\n\t */\n\tfunction showLoading(message) {\n\t\tvar $metaBox = $('#optipress-meta-box-content');\n\t\t$metaBox.find('.optipress-status-display').hide();\n\t\t$metaBox.find('.optipress-loading').show();\n\n\t\tif (message) {\n\t\t\t$metaBox.find('.optipress-loading-text').text(message);\n\t\t}\n\t}\n\n\t/**\n\t * Hide loading state\n\t */\n\tfunction hideLoading() {\n\t\tvar $metaBox = $('#optipress-meta-box-content');\n\t\t$metaBox.find('.optipress-loading').hide();\n\t\t$metaBox.find('.optipress-status-display').show();\n\t}\n\n\t/**\n\t * Show admin notice\n\t */\n\tfunction showNotice(message, type) {\n\t\t// Use WordPress native admin notices\n\t\tvar noticeClass = 'notice notice-' + type + ' is-dismissible';\n\t\tvar $notice = $('<div class=\"' + noticeClass + '\"><p>' + message + '</p></div>');\n\n\t\t// Insert after page title\n\t\t$('.wrap h1').first().after($notice);\n\n\t\t// Make dismissible (WordPress core handles this if wp-admin scripts are loaded)\n\t\tif (typeof wp !== 'undefined' && wp.notices) {\n\t\t\t$notice.find('.notice-dismiss').on('click', function () {\n\t\t\t\t$notice.fadeTo(100, 0, function () {\n\t\t\t\t\t$notice.slideUp(100, function () {\n\t\t\t\t\t\t$notice.remove();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// Auto-dismiss success notices after 5 seconds\n\t\tif (type === 'success') {\n\t\t\tsetTimeout(function () {\n\t\t\t\t$notice.fadeTo(300, 0, function () {\n\t\t\t\t\t$notice.slideUp(200, function () {\n\t\t\t\t\t\t$notice.remove();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}, 5000);\n\t\t}\n\n\t\t// Scroll to top to show notice\n\t\t$('html, body').animate({ scrollTop: 0 }, 300);\n\t}\n\n\t/**\n\t * Reload attachment data (useful if in media modal)\n\t */\n\tfunction reloadAttachmentData(attachmentId) {\n\t\t// If we're in a media modal context, trigger refresh\n\t\tif (typeof wp !== 'undefined' && wp.media && wp.media.frame) {\n\t\t\tvar attachment = wp.media.attachment(attachmentId);\n\t\t\tif (attachment) {\n\t\t\t\tattachment.fetch();\n\t\t\t}\n\t\t}\n\t}\n})(jQuery);\n"],
  "mappings": "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",
  "names": ["$", "processing", "e", "$button", "attachmentId", "format", "convertImage", "revertImage", "switchFormat", "showLoading", "response", "showNotice", "reloadAttachmentData", "errorMsg", "hideLoading", "xhr", "status", "error", "message", "$metaBox", "type", "noticeClass", "$notice", "attachment"]
}
